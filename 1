#!/usr/bin/python3
"""
new view for City objects that handles 
all default RESTFul API actions
"""
from api.v1.views import app_views
from flask import jsonify, Blueprint, abort, request
from models import storage
from models.city import City


@app_views.route('/states/<state_id>/cities', methods=['GET'])
def get_cities_state(state_id):
    """ get cities of specific state """
    states = storage.all('State').values()
    flag = 0
    for state in states:
        if state.id == state_id:
            flag = 1
            state_obj = state
    if flag == 0:
        abort(400)
    cities_list = []
    for city in state_obj.cities():
        cities_list.append(city.to_dict())
    return (jsonify(cities_list))

@app_views.route('/states/<state_id>/cities', methods=['POST'])
def add_cities_state(state_id):
    """ add cities of a specific state """
    states = storage.all('State').values()
    flag = 0
    for state in states:
        if state.id == state_id:
            flag = 1
    if flag == 0:
        abort(400)

    if not request.get_json():
        abort(400, 'Not a JSON')
    if "name" not in request.get_json():
        abort(400, 'Missing name')
    new_city = City(request.get_json())
    new_city.save()
    return (jsonify(new_city.to_dict()))
